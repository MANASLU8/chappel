import{_ as i,c as a,a as l,o as n}from"./app-tGapivoA.js";const s={};function o(t,e){return n(),a("div",null,e[0]||(e[0]=[l('<h1 id="_3-развертывание-системы" tabindex="-1"><a class="header-anchor" href="#_3-развертывание-системы"><span>3. Развертывание системы</span></a></h1><p>Данная лабораторная работа направлена на освоение навыков контейнеризации, настройки CI/CD и мониторинга для отслеживания состояния системы.</p><h2 id="задание" tabindex="-1"><a class="header-anchor" href="#задание"><span>Задание</span></a></h2><h3 id="контеинеризация-сервисов" tabindex="-1"><a class="header-anchor" href="#контеинеризация-сервисов"><span>Контейнеризация сервисов</span></a></h3><p>Для выполнения лабораторной работы необходимо провести <strong>контейнеризацию</strong> всех разработанных сервисов с использованием <strong>Docker</strong>. Также необходимо подготовить файл <code>docker-compose.yml</code> для их <strong>совместного развертывания</strong>.</p><div class="hint-container tip"><p class="hint-container-title">Рекомендация</p><ul><li>Для передачи конфиденциальных данных в контейнеры используйте переменные окружения.</li></ul></div><h3 id="добавление-мониторинга" tabindex="-1"><a class="header-anchor" href="#добавление-мониторинга"><span>Добавление мониторинга</span></a></h3><p>Добавьте мониторинг для отслеживания состояния системы, для этого выполните следующие пункты:</p><ul><li>Установите и настройте <strong>Prometheus</strong> для сбора метрик со всех сервисов.</li><li>Подключите <strong>Grafana</strong> для визуализации данных.</li><li>Настройте следующие базовые алерты в Prometheus: <ul><li>Использование процессора превышает 80%.</li><li>Объем оперативной памяти превышает 75%.</li><li>Сервисы недоступны более 30 секунд.</li></ul></li></ul><h3 id="добавление-автотестов" tabindex="-1"><a class="header-anchor" href="#добавление-автотестов"><span>Добавление автотестов</span></a></h3><p>Реализуйте автоматическое тестирование системы, охватывающее ключевые аспекты работы приложения. Для этого напишите следующие виды тестирования:</p><ul><li><strong>Unit Tests</strong>: проверяйте отдельные модули или функции приложения, чтобы убедиться, что они работают корректно в изоляции.</li><li><strong>Integration Tests</strong>: убедитесь, что различные компоненты системы взаимодействуют друг с другом без ошибок.</li></ul><h3 id="настроика-ci-cd" tabindex="-1"><a class="header-anchor" href="#настроика-ci-cd"><span>Настройка CI/CD</span></a></h3><p>Настройте CI/CD пайплайн в <code>Forgejo</code> с использованием <code>Jenkins</code> для автоматизированной сборки и тестирования проекта на предоставленных серверах в соответствии со следующими этапами:</p><ol><li>Этап сборки: <ul><li>Сборка Docker-образов для всех сервисов.</li></ul></li><li>Этап тестирования: <ul><li>Запуск автотестов на собранных образах.</li><li>Генерация отчета о тестах.</li></ul></li><li>Этап выгрузки (Опционально): <ul><li>Выгрузка собранных образов в выбранное хранилище Docker Images.</li></ul></li></ol><div class="hint-container important"><p class="hint-container-title">Важно</p><p>Убедитесь, что конфиденциальные данные (например, ключи и пароли) в CI/CD конфигурациях защищены. Используйте переменные окружения <code>Forgejo</code> и <code>Jenkins</code>.</p></div><div class="hint-container info"><p class="hint-container-title">Дополнительная информация</p><p>Если вы хотите использовать альтернативный CI/CD пайплайн на self-hosting ресурсах, вы можете использовать GitLab CI/CD.</p></div><h2 id="критерии-оценки" tabindex="-1"><a class="header-anchor" href="#критерии-оценки"><span>Критерии оценки</span></a></h2><p>При оценке результатов лабораторной работы учитываются следующие аспекты проделанной работы:</p><ol><li>Полнота и точность настройки системы мониторинга.</li><li>Полнота реализованных автотестов в пайплайне.</li><li>Умение аргументировать принятые решения при разработке <code>Dockerfile</code>, <code>docker-compose.yml</code>, <code>Jenkins</code> и конфигураций мониторинга.</li><li>Точность и полнота ответов на вопросы преподавателя по содержанию лабораторной работы при ее защите.</li></ol>',20)]))}const c=i(s,[["render",o],["__file","3.html.vue"]]),d=JSON.parse('{"path":"/task/task/3.html","title":"3. Развертывание системы","lang":"en-US","frontmatter":{},"git":{},"filePathRelative":"task/task/3.md"}');export{c as comp,d as data};
